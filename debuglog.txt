--------------------
FORMATTING:
X description of bug (X means resolved, > means in progress, - means recorded)
    (who recorded the bug)
  * bullet points list notes about bug
  * if you add notes, put your name like this (Name)
  ~ how long it took to solve bug, and how many lines were changed
  ~ type of bug and how it was fixed
    (who fixed the bug)
--------------------
EXAMPLES: (we can delete this later)
- bits aren't shifting correctly (bug that was recorded)
    (Alexandra)
  * colors are messed up
  * I think the bug is in level 2 of the octree

> LEDs only display the 1st digit (bug currently being worked on)
    (Ben)
  * not reading the packet correctly
  * I am changing the bitmask (Kevin)

X time not showing correctly (bug that was resolved)
    (Jack)
  * time counting down in reverse
  * I think something is wrong when converting the hex number
  ~ 30 mins, 1 line change
  ~ algorithmic, was inputting the time wrong, display function was fine
    (Jack)
--------------------
DEBUG LOG 3.1:

X nothing is being updated in the OS after doing make dep and sudo make
  (Kevin)
  * warning compiler said after sudo make execution was 
  * cp: cannot remove ‘./mp3.img’: Text file busy
  ~ 10 mins
  ~ algorithmic, was not closing test_debug when executing make commands
    (Kevin)

X divide by zero exception is not triggered
  (Kevin)
  ~ 20 min, 1 line change
  ~ algorithmic, did not change present bit to 1 for idt entry

X keyboard outputting wrong values per key press
  (Kevin)
  ~ 30 mins, 3 line change
  ~ algorithmic, misunderstood keyboard documentation

X rtc handler does not execute
  (Kevin)
  ~ 1 hour, 20 line change
  ~ algorithmic, had to use inline assembly to wrap rtc handler

X "Enabling Interrupts" won't print after page_init
  (Alexandra)
  * when stepping thru in gdb everything looks fine
  * the print statement runs and sti() runs, just no text shows up
  ~ 1 hours, 1 line change
  ~ algorithmic, wrong video memory address
  (Ben)

X pic not sending correct EOI 
  (Jack)
  ~15 minutes, 2 line changes
  ~algorithmic, had to change number that was being written as well as 
  adding always sending a signal to the master port
  (Kevin)

X boot looping
  (Ben)
  ~ 3 hours, 50 line change
  ~ doing page initialization in wrong order,
    have to load directory first, then enable paging,
    also had to change the assembly functions
  (Ben)

X frequency of RTC off 
  (Kevin)
  * weird frequency when testing the read and write and open functions
  ~ 2 hours, 1 line change
  ~ algorithmic, did not initialize count variable in the log function
  ~ assumed it would be initialized to 0
  (Kevin)

X scroll down visual bug
  (Ben)
  * Bottom line didn't clear properly when scroll down happens, filled bottom line with null
  ~ 15 minutes, 4 line change
  ~ Algorithmic, didn't fill proper memory locations, for loop bounds were wrong
  (Ben)

X Backspace cursor lagging
  (Ben)
  * When backspace happens, cursor wouldn't update until next key pressed
  ~ 2 minutes, 1 line change
  ~ Algorithmic, didn't call update cursor function right after backspace changed scroll x 
  (Ben)

X Enter button didn't work
  (Ben)
  * User could press enter multiple times even when waiting for terminal read
  ~ 20 minutes, 1 line change
  ~ Algorithmic, didn't check for enter flag before enter character sequence
  (Ben)

X read_data is not reading anything, returns 0 bytes
  (Alexandra)
  * first fixed for loop so that will read 1st block
  * still issues with j and length
    - length is CHAR length
    - every index in block is 1 char (4096 chars total)
  (Alexandra)

> sometimes get page_fault even before actual reading
  (Alexandra)
  * issue with the strlen in test
    - happens when len = 24
  * maybe issue with the \n?
  * cannot use null dentry when opening file
  * read dentry can't assign using null pointer

X Backspace possible even before start of user entered space
  (Ben)
  * It was possible to delete previous information displayed to the screen even
    before the user was supposed to be able to type into the terminal
  ~ 5 minutes, 1 line change
  ~ Algorithmic, fixed by checking against first location of keyboard buffer so that it 
    couldn't go before the zero index of keyboard buffer

X Enter possible even before terminal read previous keyboard buffer
  * It was possible for the user to print the new line character by clicking enter even 
    before the terminal read the previous keyboard buffer
  ~ 5 minutes, 2 line change
  ~ Algorithmic, fixed by checking if enter flag was already 1 before new line character 
    would be generated

